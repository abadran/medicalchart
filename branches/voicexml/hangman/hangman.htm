<html>
<head>

<title> Hangman </title>

<!-- This script adds WAMI capabilities to your web page.   It includes your developer key -->
<script src="http://wami.csail.mit.edu/portal/wami.js?devKey=9e0ad087096c535c0714e085f28bf738"> </script>

<script>

    var myWamiApp;
    var guessChoices = new Array("international","fantastic","saturday","chicken","superlative","infinitesimal");
    var usedLetters = "";
    var guessWord;
    var current_image = 1;
    
    function onLoad() {
        //div in which to put the audio button, see below
        var audioDiv = document.getElementById('AudioContainer'); 
    
        var jsgf = "#JSGF V1.0;\n" +
                   "grammar Hangman;\n" +
                   "public <top> = <letter> | <command>;\n" +
                   "<letter> = aye {[letter=a]} | alpha {[letter=a]} | bee {[letter=b]} | bravo {[letter=b]} | sea {[letter=c]} | charlie {[letter=c]}\n" +
                   "         | dee {[letter=d]} | delta {[letter=d]} | ee {[letter=e]} | echo {[letter=e]} | eff {[letter=f]} | foxtrot {[letter=f]}\n" +
                   "         | gee {[letter=g]} | golf {[letter=g]} | age {[letter=h]} | hotel {[letter=h]} | jay {[letter=j]} | juliet {[letter=j]}\n" +
                   "         | kay {[letter=k]} | kilo {[letter=k]} | ell {[letter=l]} | lima {[letter=l]} | emm {[letter=m]} | mike {[letter=m]}\n" +
                   "         | enn {[letter=n]} | november {[letter=n]} | oh {[letter=o]} | oscar {[letter=o]} | pee {[letter=p]} | papa {[letter=p]}\n" +
                   "         | queue {[letter=q]} | quebec {[letter=q]} | are {[letter=r]} | romeo {[letter=r]} | ess {[letter=s]} | sierra {[letter=s]}\n" +
                   "         | tea {[letter=t]} | tango {[letter=t]} | you {[letter=u]} | uniform {[letter=u]} | vee {[letter=v]} | victor {[letter=v]}\n" +
                   "         | double you {[letter=w]} | whiskey {[letter=w]} | ecks {[letter=x]} | xray {[letter=x]} | why {[letter=y]}| whiskey {[letter=y]}\n" +
                   "         | zulu {[letter=z]} | zee {[letter=z]} | zed {[letter=z]};\n" +
                   "<command> = no {[command=back]} | wrong {[command=back]} | back {[command=back]}\n" +
                   "          | start over {[command=neword]} | new word {[command=neword]}\n" + 
                   "           ;";
    
        var grammar = {"language" : "en-us", "grammar" : jsgf };
    
        //Audio options.
        //pollForAudio: must be true for speech synthesis to work. 
        //If your application doesn't use speech synthesis, set this to false.
        var audioOptions = {"width": "200", "height": "50", "pollForAudio" : true};
    
        //Configuration options.
        //sendIncrementalResults: if true, you'll receive "incremental" recognition results as the user speaks
        //sendAggregates: if true, you'll receive a "semantic" interpretation.  Your grammar
        //must follow a specific format.
        var configOptions = {"sendIncrementalResults" : false, "sendAggregates" : true};
      
        //Handlers are functions which are called for various events:
        var handlers = {"onReady" : onWamiReady, //WAMI is loaded and ready
                        "onRecognitionResult" : onWamiRecognitionResult,  //Speech recognition result available
                        "onError" : onWamiError,  //An error occurred
                        "onTimeout" : onWamiTimeout}; //WAMI timed out due to inactivity
        //Create your WAMI application with the settings and grammar we just created
        myWamiApp = new WamiApp(audioDiv, handlers, "json", audioOptions, configOptions, grammar);
    }

    function onWamiReady() {
        //hide the "Loading" message
        var loadingDiv = document.getElementById("LoadingDiv");
        loadingDiv.parentNode.removeChild(loadingDiv);
	var imageDiv = document.getElementById("HangmanImage");
	imageDiv.style.visibility = 'visible'
	myWamiApp.speak("Welcome to the game of Hang man.");
        startOver();
        setfocus('TypedLetter');
    }

    //called when a speech recognition result is received
    //since we set sendIncrementalResults to false, this will only
    //be called after the user finishes speaking.  Otherwise,
    //it will be called many times as the user speaks.
    function onWamiRecognitionResult(result) {
        setfocus('TypedLetter');
        if(!result.hyps || result.hyps.length == 0 || !result.hyps[0].aggregate) {
            return;
        }
    
        //key value pairs
        var aggregate = result.hyps[0].aggregate;
        var kvs = aggregate.kvs;
    
        // process command or letter
        if (kvs.command != null) {
            processCommand(kvs.command);
        } else if (kvs.letter != null) {
		// when game is over current_image will be equal to 11.
		if (current_image != 11) {
			processLetter(kvs.letter);
		}
        }
    }

    //called when an error occurs
    function onWamiError(type, message) {
        alert("WAMI error: type  = " + type + ", message = " + message);    
    }
    
    //called when your WAMI session times out due to
    //in activity.
    function onWamiTimeout() {
        alert("WAMI timed out.  Hit reload to start over");
    }
    
    // pick a new word, reset values, start with a clean slate
    function startOver() {
        guessWord = guessChoices[Math.round((guessChoices.length - 1)*Math.random())].toLowerCase();
        usedLetters = "";
        //var audio_container = document.getElementById("AudioContainer");
	//audio_container.style.visibility = "visible";
        //var keyboard = document.getElementById("keyboard");
	//keyboard.style.visibility = "visible";
	enable_all_keys();
        refreshDisplay();
    }
    
    //called when a new word is picked and after a letter is obtained from the user
    function refreshDisplay() {
        var pattern = new Array(guessWord.length);
        var hangmanWordEl = document.getElementById("HangmanWord");
        var usedLettersEl = document.getElementById("UsedLetters");
        var i,c;
        var charIndex;
        
        for (i=0;i<guessWord.length;i++) {
            pattern[i] = "_";
        }
        
        for (u=0;u<usedLetters.length;u++) {
            for (g=0;g<guessWord.length;g++) {
                if (guessWord.charAt(g)==usedLetters.charAt(u)) {
                    pattern[g] = guessWord.charAt(g);
                }
            }
        }
        
        clearChildren(hangmanWordEl);
        hangmanWordEl.appendChild(document.createTextNode(pattern.join(' ')));
        
        if (pattern.join('')==guessWord) {
            winner();
        }

        setfocus('TypedLetter');
    }
    
    //called when user issues a command, like "new word" or "back"
    function processCommand(command) {
        if ("neword"==command) {
            startOver();
        } else if ("back"==command) {
            clearLastInput();
        }
    }

    //called when user enters or says a letter
    function processLetter(letter) {
        if (-1 == usedLetters.indexOf(letter)) {
	    var button_name = "button_" + letter;
	    var button = document.getElementById(button_name)
            usedLetters = usedLetters.concat(letter);
            if (-1 == guessWord.indexOf(letter)) {
                wrongLetter(letter);
	    } else {
                rightLetter(letter);
	    }
	    button.disabled = "disabled"
            refreshDisplay();
        }

    }
    
    //called when user enters a letter
    function processTypedLetter(e) {
        var k;
        var isLetter;
        var letter;
        document.all ? k = e.keyCode : k = e.which;
        isLetter = ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8);
        if (isLetter && (letter=document.getElementById("TypedLetter").value).length > 0) {
            processLetter(letter.toLowerCase());
        }
        document.getElementById("TypedLetter").value = "";
    }
    
    //called when user wants to cheat or the voice recognition didn't work
    function clearLastInput() {
    }
    
    //called when the user did not quess a letter
    function wrongLetter(letter) {
        // advance hangman image
        if (current_image < 11) {
	    current_image += 1;
            var image_tag = document.getElementById('state_image');
	    image_tag.src = "images/" + current_image.toString() + ".png";
	    if (current_image == 11) {
		loser();
	    }
        }
         
        // turn off letter button
	var button_name = "button_" + letter;
	var button = document.getElementById(button_name);
	button.style.backgroundColor = "red";
	button.style.color = "white";
    }

    //called when user guesses a letter
    function rightLetter(letter) {
	var button_name = "button_" + letter;
	var button = document.getElementById(button_name);
        button.style.backgroundColor = "lawngreen";
	button.style.color = "black";
    }
    

    //called when user guesses all letters in a word
    function winner() {
	    var image_tag = document.getElementById('state_image');
	    image_tag.src = "images/free.png";
    }
    
    // called at the end when the user has exhausted all their trials.
    function loser()
    {
	// These don't 'feel' right on the web page, too many changes.
        //var audio_container = document.getElementById("AudioContainer");
	//audio_container.style.visibility = "hidden";
        //var keyboard = document.getElementById("keyboard");
	//keyboard.style.visibility = "hidden";


	//var audio_container = document.getElementById("AudioContainer");
	//audio_container.style.visibility = "hidden";
	disable_all_keys();
	// probably bring up a "New Game" button.
    }
    //utility functions
    function clearChildren(e) {
        while(e.childNodes && e.childNodes.length > 0) {
            e.removeChild(e.childNodes[0]);
        }
    }

    function setfocus(a_field_id) {
        document.getElementById("TypedLetter").focus();
    }

    // called at startup to enable all the keys.
    function enable_all_keys()
    {
	var button;
	button = document.getElementById("button_a");
	button.disabled = "";
	button = document.getElementById("button_b");
	button.disabled = "";
	button = document.getElementById("button_c");
	button.disabled = "";
	button = document.getElementById("button_d");
	button.disabled = "";
	button = document.getElementById("button_e");
	button.disabled = "";
	button = document.getElementById("button_f");
	button.disabled = "";
	button = document.getElementById("button_g");
	button.disabled = "";
	button = document.getElementById("button_h");
	button.disabled = "";
	button = document.getElementById("button_i");
	button.disabled = "";
	button = document.getElementById("button_j");
	button.disabled = "";
	button = document.getElementById("button_k");
	button.disabled = "";
	button = document.getElementById("button_l");
	button.disabled = "";
	button = document.getElementById("button_m");
	button.disabled = "";
	button = document.getElementById("button_n");
	button.disabled = "";
	button = document.getElementById("button_o");
	button.disabled = "";
	button = document.getElementById("button_p");
	button.disabled = "";
	button = document.getElementById("button_q");
	button.disabled = "";
	button = document.getElementById("button_r");
	button.disabled = "";
	button = document.getElementById("button_s");
	button.disabled = "";
	button = document.getElementById("button_t");
	button.disabled = "";
	button = document.getElementById("button_u");
	button.disabled = "";
	button = document.getElementById("button_v");
	button.disabled = "";
	button = document.getElementById("button_w");
	button.disabled = "";
	button = document.getElementById("button_x");
	button.disabled = "";
	button = document.getElementById("button_y");
	button.disabled = "";
	button = document.getElementById("button_z");
	button.disabled = "";
    }

    function disable_all_keys()
    {
	var button;
	button = document.getElementById("button_a");
	button.disabled = "disabled";
	button = document.getElementById("button_b");
	button.disabled = "disabled";
	button = document.getElementById("button_c");
	button.disabled = "disabled";
	button = document.getElementById("button_d");
	button.disabled = "disabled";
	button = document.getElementById("button_e");
	button.disabled = "disabled";
	button = document.getElementById("button_f");
	button.disabled = "disabled";
	button = document.getElementById("button_g");
	button.disabled = "disabled";
	button = document.getElementById("button_h");
	button.disabled = "disabled";
	button = document.getElementById("button_i");
	button.disabled = "disabled";
	button = document.getElementById("button_j");
	button.disabled = "disabled";
	button = document.getElementById("button_k");
	button.disabled = "disabled";
	button = document.getElementById("button_l");
	button.disabled = "disabled";
	button = document.getElementById("button_m");
	button.disabled = "disabled";
	button = document.getElementById("button_n");
	button.disabled = "disabled";
	button = document.getElementById("button_o");
	button.disabled = "disabled";
	button = document.getElementById("button_p");
	button.disabled = "disabled";
	button = document.getElementById("button_q");
	button.disabled = "disabled";
	button = document.getElementById("button_r");
	button.disabled = "disabled";
	button = document.getElementById("button_s");
	button.disabled = "disabled";
	button = document.getElementById("button_t");
	button.disabled = "disabled";
	button = document.getElementById("button_u");
	button.disabled = "disabled";
	button = document.getElementById("button_v");
	button.disabled = "disabled";
	button = document.getElementById("button_w");
	button.disabled = "disabled";
	button = document.getElementById("button_x");
	button.disabled = "disabled";
	button = document.getElementById("button_y");
	button.disabled = "disabled";
	button = document.getElementById("button_z");
	button.disabled = "disabled";
    }

</script>

<!--  CSS styles used in the game -->
<style type="text/css">

#PageTitle {
	font-family: Comic Sans MS, cursive;
	font-size: 48px;
}

#HangmanWord {
    font-size: 4em;
    font-family: monospace;
}

#HangmanImage {
   visibility:hidden;
}

#LoadingDiv {
    position:absolute;
    left:45%;
    top:300px;
    z-index:1;
    background-color:blue;
    visibility:visible;
    width:100px;
    height:100px;
}

#TypedLetter {
    position:absolute; 
    top:-10em;
    left:-10em;
}

.wrong {
    color: red;
    font-weight: bold;
}

.neword {
    color: green;
    font-weight: bold;
}

</style>
</head>

<body onload="onLoad()">

   <div id="MainDiv">
      <center>
          <div id="PageTitle">Hangman</div>

          <div id="HangmanImage"><img id="state_image" src="images/1.png" name="state_image"/></div>
          
          <div id="HangmanWord"></div>
          
          <p>
          
          <div id="AudioContainer"></div> <!--  Audio button will be put here -->
	<div id="keyboard">
		<p>
			<button id="button_q" type="button" onmousedown="processLetter('q')"><b>Q</b><br>Quebec</button>
			<button id="button_w" type="button" onmousedown="processLetter('w')"><b>W</b><br>Whiskey</button>
			<button id="button_e" type="button" onmousedown="processLetter('e')"><b>E</b><br>Echo</button>
			<button id="button_r" type="button" onmousedown="processLetter('r')"><b>R</b><br>Romeo</button>
			<button id="button_t" type="button" onmousedown="processLetter('t')"><b>T</b><br>Tango</button>
			<button id="button_y" type="button" onmousedown="processLetter('y')"><b>Y</b><br>Yankee</button>
			<button id="button_u" type="button" onmousedown="processLetter('u')"><b>U</b><br>Uniform</button>
			<button id="button_i" type="button" onmousedown="processLetter('i')"><b>I</b><br>India</button>
			<button id="button_o" type="button" onmousedown="processLetter('o')"><b>O</b><br>Oscar</button>
			<button id="button_p" type="button" onmousedown="processLetter('p')"><b>P</b><br>Papa</button>
			<br/>
			<button id="button_a" type="button" onmousedown="processLetter('a')"><b>A</b><br>Alpha</button>
			<button id="button_s" type="button" onmousedown="processLetter('s')"><b>S</b><br>Sierra</button>
			<button id="button_d" type="button" onmousedown="processLetter('d')"><b>D</b><br>Delta</button>
			<button id="button_f" type="button" onmousedown="processLetter('f')"><b>F</b><br>Foxtrot</button>
			<button id="button_g" type="button" onmousedown="processLetter('g')"><b>G</b><br>Golf</button>
			<button id="button_h" type="button" onmousedown="processLetter('h')"><b>H</b><br>Hotel</button>
			<button id="button_j" type="button" onmousedown="processLetter('j')"><b>J</b><br>Juliet</button>
			<button id="button_k" type="button" onmousedown="processLetter('k')"><b>K</b><br>Kilo</button>
			<button id="button_l" type="button" onmousedown="processLetter('l')"><b>L</b><br>Lima</button>
			<br/>
			<button id="button_z" type="button" onmousedown="processLetter('z')"><b>Z</b><br>Zulu</button>
			<button id="button_x" type="button" onmousedown="processLetter('x')"><b>X</b><br>Xray</button>
			<button id="button_c" type="button" onmousedown="processLetter('c')"><b>C</b><br>Charlie</button>
			<button id="button_v" type="button" onmousedown="processLetter('v')"><b>V</b><br>Victor</button>
			<button id="button_b" type="button" onmousedown="processLetter('b')"><b>B</b><br>Bravo</button>
			<button id="button_n" type="button" onmousedown="processLetter('n')"><b>N</b><br>November</button>
			<button id="button_m" type="button" onmousedown="processLetter('m')"><b>M</b><br>Mike</button>
		</p>
	</div>
          
          <div id="Instructions"> 
          Guess the letters by <b>saying</b>, <b>clicking</b>, or <b>typing</b> them. <br/>
          If we get the letter wrong, you can say <span class="wrong">wrong</span> or <span class="wrong">back</span>. <br/>
          To start over, say <span class="neword">start over</span> or <span class="neword">new word</span>.<br/>
          <input id="TypedLetter" type="text" size="1" maxlength="1" onkeyup="processTypedLetter(event)"></input>
          </div>
          
          <div id="UsedLetters"></div>
          
          <br/>
          
      </center>
   </div>

   <div id="LoadingDiv">
       <center>
       <br><br>
       Loading...
       </center>
   </div>

</body>
</html>
